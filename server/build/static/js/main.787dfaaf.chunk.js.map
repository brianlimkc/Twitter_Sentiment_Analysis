{"version":3,"sources":["../node_modules/sentiment/languages sync /^/.//.*//index$","components/Navbar.js","components/ErrorMessage.js","components/Spinner.js","components/TweetDisplay.js","components/ShowTweets.js","components/TweetFeed.js","components/Rule.js","components/RuleList.js","components/RecentTweets.js","components/App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Navbar","className","to","ErrorMessage","error","styleType","title","details","detail","key","type","href","target","rel","errorType","Spinner","src","alt","TweetDisplay","tweet","sentimentColor","options","cards","align","width","conversation","tweetId","placeholder","positive","negative","score","comparative","toFixed","ShowTweets","state","tweets","searchTerm","cuScore","cuComScore","length","Table","sentiment","require","reducer","action","console","log","payload","tempTweetJSON","data","result","analyze","text","tempTweet","calculation","tempCuScore","tempCuComScore","tempTweetArray","unshift","isWaiting","errors","TweetFeed","useReducer","dispatch","useEffect","socket","socketIOClient","on","json","streamTweets","message","reconnectMessage","errorMessage","Fragment","waitingMessage","Rule","onRuleDelete","value","tag","onClick","rules","newRule","filter","rule","isLoading","RuleList","createRule","a","preventDefault","add","axios","post","response","body","deleteRule","delete","ids","get","onSubmit","autoFocus","onChange","config","sort","b","reduce","t","c","RecentTweets","searchTweet","convertedSearchTerm","encodeURIComponent","App","exact","path","component","React","Component","ReactDOM","render","document","querySelector"],"mappings":"mJAAA,IAAIA,EAAM,CACT,aAAc,IAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,kJCFLY,EAjBA,WACb,OACE,yBAAKC,UAAU,sBACX,kBAAC,IAAD,CAASC,GAAG,UAAUD,UAAU,QAAhC,uBAGA,kBAAC,IAAD,CAASC,GAAG,SAASD,UAAU,QAA/B,gBAGA,kBAAC,IAAD,CAASC,GAAG,UAAUD,UAAU,QAAhC,kB,wCCuBOE,EAjCM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAwB7B,OACE,yBAAKJ,UAAS,qBAAgBI,IAC5B,yBAAKJ,UAAU,UAAUG,EAAME,OAxB7BF,EAAMG,QACDH,EAAMG,QAAQtB,KAAI,SAAAuB,GAAM,OAAI,uBAAGC,IAAKD,GAASA,MAC3CJ,EAAMI,OACR,uBAAGC,IAAKL,EAAMI,QAASJ,EAAMI,aAD/B,EAKS,WAChB,GAAIJ,EAAMM,KACR,OACE,kCAEE,uBAAGC,KAAMP,EAAMM,KAAME,OAAO,SAASC,IAAI,uBACtC,IADH,wBAEwB,KAJ1B,wBAgBDC,KCdQC,EAdC,WACd,OACE,6BACE,yBAAKd,UAAU,0CACb,yBACEA,UAAU,WACVe,IAAI,yBACJC,IAAI,oB,iBC8BCC,MApCf,SAAsBC,GAElB,IAAM/B,EAAK+B,EAAM/B,GASjB,OACI,oCACI,wBAAIa,UAAS,UAAKkB,EAAMC,iBACpB,kBAAC,IAAD,CAAmBC,QAVf,CACZC,MAAO,SACPC,MAAO,SACPC,MAAO,MACPC,aAAc,QAM+BC,QAAStC,EAAIuC,YAAa,gBAEnE,wBAAI1B,UAAS,UAAKkB,EAAMC,iBACpB,wCACCD,EAAMS,SAAS3C,KAAI,SAAC2C,EAASxC,GAAV,OAChB,wBAAIqB,IAAKrB,GAAKwC,OAGtB,wBAAI3B,UAAS,UAAKkB,EAAMC,iBACpB,wCACCD,EAAMU,SAAS5C,KAAI,SAAC4C,EAASzC,GAAV,OAChB,wBAAIqB,IAAKrB,GAAKyC,OAGtB,wBAAI5B,UAAS,UAAKkB,EAAMC,iBACpB,8CAAoBD,EAAMW,OAC1B,kDAAwBX,EAAMY,YAAYC,QAAQ,OCkBnDC,MA/Cf,SAAoBC,GAAQ,IAEhBC,EAA4CD,EAA5CC,OAAQC,EAAoCF,EAApCE,WAAYC,EAAwBH,EAAxBG,QAASC,EAAeJ,EAAfI,WAErC,GAAIH,GAAUA,EAAOI,OAAS,EAE1B,OACI,oCACI,kBAACC,EAAA,EAAD,KACI,+BACI,4BACI,4BAAI,4CACJ,4BAAI,8CACJ,4BAAI,sDAGZ,+BACI,4BACI,4BAAI,4BAAKJ,IACT,4BAAI,6BAAMC,EAAQF,EAAOI,QAAQP,QAAQ,KACzC,4BAAI,6BAAMM,EAAWH,EAAOI,QAAQP,QAAQ,QAKxD,kBAACQ,EAAA,EAAD,KACI,+BACA,4BACI,wBAAIvC,UAAW,YAAY,sCAC3B,wBAAIA,UAAW,YAAY,yCAC3B,wBAAIA,UAAW,YAAY,yCAC3B,wBAAIA,UAAW,YAAY,wCAG/B,+BACCkC,EAAOlD,KAAI,SAACkC,GAAD,OACR,wBAAIV,IAAKU,EAAM/B,IACV8B,EAAaC,WClCtCsB,EAAY,IADAC,EAAQ,KAGlBC,EAAU,SAACT,EAAOU,GACtB,OAAQA,EAAOlC,MACb,IAAK,YAEHmC,QAAQC,IAAI,4BACZD,QAAQC,IAAIF,EAAOG,SAEnB,IAAIC,EAAgBJ,EAAOG,QAAQE,KAC/BC,EAAST,EAAUU,QAAQH,EAAcI,MACzChC,EAAiB,OACjBU,EAAQoB,EAAOpB,MAEfA,IAAU,EACZV,EAAiB,OACRU,IAAU,GAAKA,GAAS,EACjCV,EAAiB,OACRU,IAAU,GAAKA,GAAS,EACjCV,EAAiB,OACRU,IAAU,GAAKA,GAAS,EACjCV,EAAiB,OACRU,GAAS,GAAKA,EAAQ,EAC/BV,EAAiB,OACE,IAAVU,EACTV,EAAiB,OACRU,EAAQ,GAAKA,EAAQ,EAC9BV,EAAiB,OACRU,GAAS,GAAKA,EAAQ,EAC/BV,EAAiB,OACRU,GAAS,GAAKA,EAAQ,EAC/BV,EAAiB,OACRU,GAAS,GAAKA,EAAQ,EAC/BV,EAAiB,OACRU,GAAS,IAClBV,EAAiB,QAGnB,IAAIiC,EAAY,CACdjE,GAAI4D,EAAc5D,GAClBgE,KAAMJ,EAAcI,KACpBtB,MAAOoB,EAAOpB,MACdC,YAAamB,EAAOnB,YACpBuB,YAAaJ,EAAOI,YACpBzB,SAAUqB,EAAOrB,SACjBD,SAAUsB,EAAOtB,SACjBR,eAAgBA,GAIdmC,EAAcrB,EAAMG,QAAUa,EAAOpB,MACrC0B,EAAiBtB,EAAMI,WAAaY,EAAOnB,YAC3C0B,EAAc,YAAOvB,EAAMC,QAK/B,OAJAsB,EAAeC,QAAQL,GAEvBR,QAAQC,IAAIO,GAEL,2BACFnB,GADL,IAEEC,OAAQsB,EACRpB,QAASkB,EACTjB,WAAYkB,EACZpD,MAAO,KACPuD,WAAW,EACXC,OAAQ,KAGZ,IAAK,aACH,OAAO,2BAAK1B,GAAZ,IAAmB9B,MAAOwC,EAAOG,QAASY,WAAW,IACvD,IAAK,aACH,OAAO,2BAAKzB,GAAZ,IAAmB0B,OAAQhB,EAAOG,QAASY,WAAW,IACxD,IAAK,iBACH,OAAO,2BAAKzB,GAAZ,IAAmB9B,MAAO,KAAMuD,WAAW,IAC7C,QACE,OAAOzB,IA4HE2B,EAxHG,WAChB,IADsB,EAUIC,qBAAWnB,EAThB,CACnBR,OAAQ,GACR/B,MAAO,GACPuD,WAAW,EACXtB,QAAS,EACTC,WAAY,EACZF,WAAY,KAPQ,mBAUfF,EAVe,KAUR6B,EAVQ,KAWd3D,EAAqB8B,EAArB9B,MAAOuD,EAAczB,EAAdyB,UAmGf,OAjBAK,qBAAU,YAhFW,WACnB,IAAIC,GAKFA,EAASC,IAAe,MAGnBC,GAAG,WAAW,eACrBF,EAAOE,GAAG,SAAS,SAACC,GACdA,EAAKnB,MACPc,EAAS,CAAErD,KAAM,YAAaqC,QAASqB,OAG3CH,EAAOE,GAAG,aAAa,SAAClB,GACtBc,EAAS,CAAErD,KAAM,sBAEnBuD,EAAOE,GAAG,SAAS,SAAClB,GAClBc,EAAS,CAAErD,KAAM,aAAcqC,QAASE,OAE1CgB,EAAOE,GAAG,aAAa,SAAClB,GACtBJ,QAAQC,IAAI,UAAWG,GACvBc,EAAS,CAAErD,KAAM,aAAcqC,QAAS,CAACE,QA0D3CoB,KACC,IAgBC,6BAvEqB,WACvB,IAAMC,EAAU,CACdhE,MAAO,eACPE,OAAQ,iDAGV,GAAIJ,GAASA,EAAMI,OACjB,OACI,6BACE,kBAAC,EAAD,CAAcC,IAAKL,EAAME,MAAOF,MAAOA,EAAOC,UAAU,YACxD,kBAAC,EAAD,CACII,IAAK6D,EAAQhE,MACbF,MAAOkE,EACPjE,UAAU,YAEd,kBAAC,EAAD,OAyDHkE,GAnDc,WAAO,IAClBX,EAAW1B,EAAX0B,OAER,GAAIA,GAAUA,EAAOrB,OAAS,EAC5B,OAAOqB,EAAO3E,KAAI,SAACmB,GAAD,OACd,kBAAC,EAAD,CAAcK,IAAKL,EAAME,MAAOF,MAAOA,EAAOC,UAAU,gBA+CzDmE,GA1CgB,WACrB,IAAMF,EAAU,CACdhE,MAAO,gBACPE,OAAQ,uCAGV,GAAImD,EACF,OACI,kBAAC,IAAMc,SAAP,KACE,6BACE,kBAAC,EAAD,CACIhE,IAAK6D,EAAQhE,MACbF,MAAOkE,EACPjE,UAAU,aAGhB,kBAAC,EAAD,OA2BHqE,GACAzC,EAAWC,K,0CCvLLyC,EAfK,SAAC,GAA4B,IAA1B1B,EAAyB,EAAzBA,KAAM2B,EAAmB,EAAnBA,aAC3B,OACE,yBAAK3E,UAAU,cACb,2BAAIgD,EAAK4B,OACT,yBAAK5E,UAAU,YAAf,QAAgCgD,EAAK6B,KACrC,4BACE7E,UAAU,mCACV8E,QAAS,kBAAMH,EAAa3B,EAAK7D,MAFnC,YCDAuD,EAAU,SAACT,EAAOU,GACtB,OAAQA,EAAOlC,MAEb,IAAK,aACH,OAAO,2BACFwB,GADL,IAEE8C,MAAOpC,EAAOG,QACdkC,QAAS,KAEX,IAAK,WACL,OAAO,2BACF/C,GADL,IAEE8C,MAAM,GAAD,mBAAM9C,EAAM8C,OAAZ,YAAsBpC,EAAOG,UAClCkC,QAAS,GACTrB,OAAQ,KAGV,IAAK,aACL,OAAO,2BACF1B,GADL,IAEE8C,MAAO9C,EAAM8C,MACbpB,OAAQhB,EAAOG,UAEjB,IAAK,cACL,OAAO,2BACFb,GADL,IAEE8C,MAAM,YAAK9C,EAAM8C,MAAME,QAAO,SAACC,GAAD,OAAUA,EAAK/F,KAAOwD,EAAOG,cAG7D,IAAK,eACL,OAAO,2BACFb,GADL,IAEE+C,QAASrC,EAAOG,UAElB,IAAK,wBACL,OAAO,2BACFb,GADL,IAEEkD,UAAWxC,EAAOG,UACtB,QACE,OAAOb,IA8IEmD,EA1IE,WACf,IADqB,EAEKvB,qBAAWnB,EADhB,CAAEqC,MAAO,GAAIC,QAAS,GAAIG,WAAW,EAAOxB,OAAQ,KADpD,mBAEd1B,EAFc,KAEP6B,EAFO,KAUfuB,EAAU,uCAAG,WAAO9F,GAAP,iBAAA+F,EAAA,6DACjB/F,EAAEgG,iBACIzC,EAAU,CAAE0C,IAAK,CAAC,CAAEZ,MAAO3C,EAAM+C,WACvCpC,QAAQC,IAAR,oBAAyBC,IAEzBgB,EAAS,CAAErD,KAAM,wBAAyBqC,SAAS,IALlC,kBAQQ2C,IAAMC,KAVhB,aAU+B5C,GAR7B,QAQT6C,EARS,QASF3C,KAAK4C,KAAKjC,OACrBG,EAAS,CAAErD,KAAM,aAAcqC,QAAS6C,EAAS3C,KAAK4C,KAAKjC,SAE3DG,EAAS,CAAErD,KAAM,WAAYqC,QAAS6C,EAAS3C,KAAK4C,KAAK5C,OAE3Dc,EAAS,CAAErD,KAAM,wBAAyBqC,SAAS,IAdpC,kDAgBfgB,EAAS,CACPrD,KAAM,aACNqC,QAAS,CAAC,CAAEvC,OAAQ,KAAE8D,YAExBP,EAAS,CAAErD,KAAM,wBAAyBqC,SAAS,IApBpC,0DAAH,sDAwBV+C,EAAU,uCAAG,WAAO1G,GAAP,eAAAmG,EAAA,6DACXxC,EAAU,CAAEgD,OAAQ,CAAEC,IAAK,CAAC5G,KAClCyD,QAAQC,IAAR,oBAAyBC,IACzBgB,EAAS,CAAErD,KAAM,wBAAyBqC,SAAS,IAHlC,SAIX2C,IAAMC,KA9BG,aA8BY5C,GAJV,OAKjBgB,EAAS,CAAErD,KAAM,cAAeqC,QAAS3D,IACzC2E,EAAS,CAAErD,KAAM,wBAAyBqC,SAAS,IANlC,2CAAH,sDAiFhB,OAtBAiB,qBAAU,WACR,sBAAC,8BAAAuB,EAAA,6DACCxB,EAAS,CAAErD,KAAM,wBAAyBqC,SAAS,IADpD,kBAI0B2C,IAAMO,IA1FlB,cAsFd,OAISL,EAJT,OAKG/C,QAAQC,IAAR,+BACAD,QAAQC,IAAI8C,GANf,EAQkCA,EAAS3C,KAAK4C,KAArC5C,KACRc,EAAS,CACPrD,KAAM,aACNqC,aAXL,MAQ2B,GAR3B,sDAcGgB,EAAS,CAAErD,KAAM,aAAcqC,QAAS,CAAC,KAAE6C,SAAS3C,QAdvD,QAiBCc,EAAS,CAAErD,KAAM,wBAAyBqC,SAAS,IAjBpD,yDAAD,KAmBC,IAGD,6BACE,0BAAMmD,SAAU,SAAC1G,GAAD,OAAO8F,EAAW9F,KAChC,yBAAKS,UAAU,yBACb,2BACES,KAAK,OACLyF,WAAW,EACXtB,MAAO3C,EAAM+C,QACbmB,SAAU,SAAC5G,GAAD,OACRuE,EAAS,CAAErD,KAAM,eAAgBqC,QAASvD,EAAEoB,OAAOiE,WAGvD,4BAAQnE,KAAK,SAAST,UAAU,qBAAhC,aApFO,WAAO,IACZ2D,EAAW1B,EAAX0B,OAER,GAAIA,GAAUA,EAAOrB,OAAS,EAC5B,OAAOqB,EAAO3E,KAAI,SAACmB,GAAD,OAChB,kBAAC,EAAD,CAAcK,IAAKL,EAAME,MAAOF,MAAOA,EAAOC,UAAU,gBAmFvDuD,GA9EO,WAAO,IACXwB,EAAqBlD,EAArBkD,UAAWJ,EAAU9C,EAAV8C,MAEbV,EAAU,CACdhE,MAAO,mBACPC,QAAS,CAAC,sDAAD,sHAGP,uDAHO,gKAKP,kGALO,uIAOP,+DAEFG,KA5DF,mGA+DA,OAAK0E,EAmBI,kBAAC,EAAD,MAlBHJ,GAASA,EAAMzC,OAAS,EACnByC,EAAM/F,KAAI,SAACkG,GAAD,OACf,kBAAC,EAAD,CACE1E,IAAK0E,EAAK/F,GACV6D,KAAMkC,EACNP,aAAc,SAACxF,GAAD,OAAQ0G,EAAW1G,SAKnC,kBAAC,EAAD,CACEqB,IAAK6D,EAAQhE,MACbF,MAAOkE,EACPjE,UAAU,YAgDb2E,MCjLTtC,EAAQ,KAAU2D,SAGlB,IACI5D,EAAY,IADAC,EAAQ,KAIlBC,EAAU,SAACT,EAAOU,GACpB,OAAQA,EAAOlC,MACX,IAAK,YACD,IACI+C,EADYb,EAAOG,QACQ9D,KAAI,SAAAkC,GAC/B,IAAI+B,EAAST,EAAUU,QAAQhC,EAAMiC,MACjChC,EAAiB,OACjBU,EAAQoB,EAAOpB,MAoCnB,OAlCIA,IAAU,EACVV,EAAiB,OACVU,IAAU,GAAKA,GAAS,EAC/BV,EAAiB,OACVU,IAAU,GAAKA,GAAS,EAC/BV,EAAiB,OACVU,IAAU,GAAKA,GAAS,EAC/BV,EAAiB,OACVU,GAAS,GAAKA,EAAQ,EAC7BV,EAAiB,OACA,IAAVU,EACPV,EAAiB,OACVU,EAAQ,GAAKA,EAAQ,EAC5BV,EAAiB,OACVU,GAAS,GAAKA,EAAQ,EAC7BV,EAAiB,OACVU,GAAS,GAAKA,EAAQ,EAC7BV,EAAiB,OACVU,GAAS,GAAKA,EAAQ,EAC7BV,EAAiB,OACVU,GAAS,IAChBV,EAAiB,QAGL,CACZhC,GAAI+B,EAAM/B,GACVgE,KAAMjC,EAAMiC,KACZtB,MAAOoB,EAAOpB,MACdC,YAAamB,EAAOnB,YACpBuB,YAAaJ,EAAOI,YACpBzB,SAAUqB,EAAOrB,SACjBD,SAAUsB,EAAOtB,SACjBR,eAAgBA,MAKxBqC,EAAe6C,MAAK,SAACf,EAAEgB,GAAH,OAAOA,EAAEzE,MAAMyD,EAAEzD,SACrC,IAAIyB,EAAcE,EAAe+C,QAAO,SAACC,EAAEC,GAAH,OAAQA,EAAE5E,MAAM2E,IAAG,GACvDjD,EAAiBC,EAAe+C,QAAO,SAACC,EAAEC,GAAH,OAAQA,EAAE3E,YAAY0E,IAAG,GAEpE,OAAO,2BACAvE,GADP,IAEIC,OAAQsB,EACRpB,QAASkB,EACTjB,WAAYkB,IAEpB,IAAK,iBACD,OAAO,2BACAtB,GADP,IAEIE,WAAYQ,EAAOG,UAE3B,QACI,OAAOb,IA6DJyE,MAzDf,WAEI,IAFoB,EASM7C,qBAAWnB,EAPhB,CACjBR,OAAQ,GACRE,QAAS,EACTC,WAAY,EACZF,WAAY,KANI,mBASbF,EATa,KASN6B,EATM,KAUZ3B,EAAeF,EAAfE,WAEFwE,EAAW,uCAAG,WAAOpH,GAAP,iBAAA+F,EAAA,6DAChB/F,EAAEgG,iBAEEqB,EAAsBC,mBAAmB1E,GAH7B,kBAMWsD,IAAMO,IAAN,UAtFjB,gBAsFiB,OAAyBY,IANpC,QAMNjB,EANM,QAOC3C,KAAK4C,KAAKjC,QACnBf,QAAQC,IAAI,4BACZD,QAAQC,IAAI8C,EAAS3C,KAAK4C,KAAKjC,UAG/Bf,QAAQC,IAAI,8BACZiB,EAAS,CAACrD,KAAM,YAAaqC,QAAS6C,EAAS3C,KAAK4C,KAAK5C,QAbjD,gDAiBZJ,QAAQC,IAAI,0BAjBA,yDAAH,sDAqBjB,OACI,6BACI,8DACA,8BACI,yBAAK7C,UAAU,yBACX,2BACIS,KAAK,OACLyF,WAAW,EACXtB,MAAOzC,EACPgE,SAAU,SAAC5G,GAAD,OACNuE,EAAS,CAACrD,KAAK,iBAAkBqC,QAAQvD,EAAEoB,OAAOiE,WAI1D,4BAAQ5E,UAAU,oBAAoB8E,QAAS,SAACvF,GAAD,OAAOoH,EAAYpH,KAAlE,0BAKPyC,EAAWC,KCzFT6E,E,uKA9BX,OACE,yBAAK9G,UAAU,gBACb,yBAAKA,UAAU,iBAEf,wBAAIA,UAAU,aACZ,yBACEA,UAAU,WACVe,IAAI,yBACJC,IAAI,iBAEN,yBAAKhB,UAAU,WAAf,sBAEE,yBAAKA,UAAU,cAAf,6BAIJ,yBAAKA,UAAU,gBACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAO+G,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,SAASC,UAAW7B,IACtC,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,UAAUC,UAAWrD,IACvC,kBAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,UAAUC,UAAWP,W,GAxBjCQ,IAAMC,W,OCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.787dfaaf.chunk.js","sourcesContent":["var map = {\n\t\"./en/index\": 53\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 111;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"ui three item menu\">\n        <NavLink to=\"/recent\" className=\"item\" >\n        Recent Tweet Search\n        </NavLink>\n        <NavLink to=\"/rules\" className=\"item\" >\n        Manage Rules\n        </NavLink>\n        <NavLink to=\"/tweets\" className=\"item\" >\n        Tweet Stream\n        </NavLink>\n\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst ErrorMessage = ({ error, styleType }) => {\n  const errorDetails = () => {\n    if (error.details) {\n      return error.details.map(detail => <p key={detail}>{detail}</p>);\n    } else if (error.detail) {\n      return <p key={error.detail}>{error.detail}</p>;\n    }\n  };\n\n  const errorType = () => {\n    if (error.type) {\n      return (\n        <em>\n          See\n          <a href={error.type} target=\"_blank\" rel=\"noopener noreferrer\">\n            {\" \"}\n            Twitter documentation{\" \"}\n          </a>\n          for further details.\n        </em>\n      );\n    }\n  };\n\n  return (\n    <div className={`ui message ${styleType}`}>\n      <div className=\"header\">{error.title}</div>\n      {errorDetails()}\n      {errorType()}\n    </div>\n  );\n};\n\nexport default ErrorMessage;\n","import React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <div>\n      <div className=\"ui active centered large inline loader\">\n        <img\n          className=\"ui image\"\n          src=\"/Twitter_Logo_Blue.png\"\n          alt=\"Twitter Logo\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from 'react';\nimport {TwitterTweetEmbed} from \"react-twitter-embed\";\n\nfunction TweetDisplay(tweet) {\n\n    const id = tweet.id;\n\n    const options = {\n        cards: \"hidden\",\n        align: \"center\",\n        width: \"450\",\n        conversation: \"none\",\n    };\n\n    return (\n        <>\n            <td className={`${tweet.sentimentColor}`}>\n                <TwitterTweetEmbed options={options} tweetId={id} placeholder={\"Loading...\"}/>\n            </td>\n            <td className={`${tweet.sentimentColor}`}>\n                <h3>Positive</h3>\n                {tweet.positive.map((positive,id)=>(\n                    <li key={id}>{positive}</li>\n                ))}\n            </td>\n            <td className={`${tweet.sentimentColor}`}>\n                <h3>Negative</h3>\n                {tweet.negative.map((negative,id)=>(\n                    <li key={id}>{negative}</li>\n                ))}\n            </td>\n            <td className={`${tweet.sentimentColor}`}>\n                <h3>Overall Score: {tweet.score}</h3>\n                <h3>Comparative Score: {tweet.comparative.toFixed(2)}</h3>\n            </td>\n        </>\n    )\n}\n\nexport default TweetDisplay;\n","import React from 'react';\nimport {Table} from \"react-bootstrap\";\nimport TweetDisplay from \"./TweetDisplay\";\n\nfunction ShowTweets(state) {\n\n    const { tweets, searchTerm, cuScore, cuComScore } = state;\n\n    if (tweets && tweets.length > 0) {\n\n        return (\n            <>\n                <Table>\n                    <thead>\n                        <tr>\n                            <th><h1>Search Term</h1></th>\n                            <th><h1>Average Score</h1></th>\n                            <th><h1>Average Comparative</h1></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td><h1>{searchTerm}</h1></td>\n                            <td><h1>{(cuScore/tweets.length).toFixed(2)}</h1></td>\n                            <td><h1>{(cuComScore/tweets.length).toFixed(2)}</h1></td>\n                        </tr>\n                    </tbody>\n                </Table>\n\n                <Table>\n                    <thead>\n                    <tr>\n                        <th className={\"tableCol\"}><h1>Tweet</h1></th>\n                        <th className={\"tableCol\"}><h1>Positive</h1></th>\n                        <th className={\"tableCol\"}><h1>Negative</h1></th>\n                        <th className={\"tableCol\"}><h1>Score</h1></th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {tweets.map((tweet) => (\n                        <tr key={tweet.id}>\n                            {TweetDisplay(tweet)}\n                        </tr>\n                    ))}\n                    </tbody>\n                </Table>\n            </>\n        );\n    }\n}\n\nexport default ShowTweets;\n","import React, { useEffect, useReducer } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport Spinner from \"./Spinner\";\nimport ShowTweets from \"./ShowTweets\";\n\nlet Sentiment = require('sentiment');\nlet sentiment = new Sentiment();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"add_tweet\":\n\n      console.log(\"Inside reducer/add tweet\")\n      console.log(action.payload)\n\n      let tempTweetJSON = action.payload.data\n      let result = sentiment.analyze(tempTweetJSON.text)\n      let sentimentColor = \"zero\"\n      let score = result.score\n\n      if (score <= -6) {\n        sentimentColor = \"neg5\"\n      } else if (score <= -4 && score > -6) {\n        sentimentColor = \"neg4\"\n      } else if (score <= -2 && score > -4) {\n        sentimentColor = \"neg3\"\n      } else if (score <= -1 && score > -2) {\n        sentimentColor = \"neg2\"\n      } else if (score > -1 && score < 0) {\n        sentimentColor = \"neg1\"\n      } else if (score === 0) {\n        sentimentColor = \"zero\"\n      } else if (score > 0 && score < 1) {\n        sentimentColor = \"pos1\"\n      } else if (score >= 1 && score < 2) {\n        sentimentColor = \"pos2\"\n      } else if (score >= 2 && score < 4) {\n        sentimentColor = \"pos3\"\n      } else if (score >= 4 && score < 6) {\n        sentimentColor = \"pos4\"\n      } else if (score >= 6) {\n        sentimentColor = \"pos5\"\n      }\n\n      let tempTweet = {\n        id: tempTweetJSON.id,\n        text: tempTweetJSON.text,\n        score: result.score,\n        comparative: result.comparative,\n        calculation: result.calculation,\n        negative: result.negative,\n        positive: result.positive,\n        sentimentColor: sentimentColor\n        }\n\n      // tempTweetArray.sort((a,b)=>b.score-a.score)\n      let tempCuScore = state.cuScore + result.score\n      let tempCuComScore = state.cuComScore + result.comparative\n      let tempTweetArray = [...state.tweets]\n      tempTweetArray.unshift(tempTweet)\n\n      console.log(tempTweet)\n\n      return {\n        ...state,\n        tweets: tempTweetArray,\n        cuScore: tempCuScore,\n        cuComScore: tempCuComScore,\n        error: null,\n        isWaiting: false,\n        errors: [],\n      }\n\n    case \"show_error\":\n      return { ...state, error: action.payload, isWaiting: false };\n    case \"add_errors\":\n      return { ...state, errors: action.payload, isWaiting: false };\n    case \"update_waiting\":\n      return { ...state, error: null, isWaiting: true };\n    default:\n      return state;\n  }\n};\n\nconst TweetFeed = () => {\n  const initialState = {\n    tweets: [],\n    error: {},\n    isWaiting: true,\n    cuScore: 0,\n    cuComScore: 0,\n    searchTerm: \"\"\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { error, isWaiting } = state;\n\n  const streamTweets = () => {\n    let socket;\n\n    if (process.env.NODE_ENV === \"development\") {\n      socket = socketIOClient(\"http://localhost:3001/\");\n    } else {\n      socket = socketIOClient(\"/\");\n    }\n\n    socket.on(\"connect\", () => {});\n    socket.on(\"tweet\", (json) => {\n      if (json.data) {\n        dispatch({ type: \"add_tweet\", payload: json });\n      }\n    });\n    socket.on(\"heartbeat\", (data) => {\n      dispatch({ type: \"update_waiting\" });\n    });\n    socket.on(\"error\", (data) => {\n      dispatch({ type: \"show_error\", payload: data });\n    });\n    socket.on(\"authError\", (data) => {\n      console.log(\"data =>\", data);\n      dispatch({ type: \"add_errors\", payload: [data] });\n    });\n  };\n\n  const reconnectMessage = () => {\n    const message = {\n      title: \"Reconnecting\",\n      detail: \"Please wait while we reconnect to the stream.\",\n    };\n\n    if (error && error.detail) {\n      return (\n          <div>\n            <ErrorMessage key={error.title} error={error} styleType=\"warning\" />\n            <ErrorMessage\n                key={message.title}\n                error={message}\n                styleType=\"success\"\n            />\n            <Spinner />\n          </div>\n      );\n    }\n  };\n\n  const errorMessage = () => {\n    const { errors } = state;\n\n    if (errors && errors.length > 0) {\n      return errors.map((error) => (\n          <ErrorMessage key={error.title} error={error} styleType=\"negative\" />\n      ));\n    }\n  };\n\n  const waitingMessage = () => {\n    const message = {\n      title: \"Still working\",\n      detail: \"Waiting for new Tweets to be posted\",\n    };\n\n    if (isWaiting) {\n      return (\n          <React.Fragment>\n            <div>\n              <ErrorMessage\n                  key={message.title}\n                  error={message}\n                  styleType=\"success\"\n              />\n            </div>\n            <Spinner />\n          </React.Fragment>\n      );\n    }\n  };\n\n  useEffect(() => {\n    streamTweets();\n  }, []);\n\n  // const showTweets = () => {\n  //   if (tweets.length > 0) {\n  //     console.log(tweets)\n  //     return (\n  //         <React.Fragment>\n  //           {tweets.map((tweet) => (\n  //               <Tweet key={tweet.data.id} json={tweet} />\n  //           ))}\n  //         </React.Fragment>\n  //     );\n  //   }\n  // };\n\n  return (\n      <div>\n        {reconnectMessage()}\n        {errorMessage()}\n        {waitingMessage()}\n        {ShowTweets(state)}\n      </div>\n  );\n};\n\nexport default TweetFeed;\n","import React from \"react\";\n\nexport const Rule = ({ data, onRuleDelete }) => {\n  return (\n    <div className=\"ui segment\">\n      <p>{data.value}</p>\n      <div className=\"ui label\">tag: {data.tag}</div>\n      <button\n        className=\"ui right floated negative button\"\n        onClick={() => onRuleDelete(data.id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default Rule;\n","import React, { useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport Rule from \"./Rule\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport Spinner from \"./Spinner\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n\n    case \"show_rules\":  // updates rules\n      return {\n        ...state,\n        rules: action.payload,\n        newRule: \"\" };\n\n      case \"add_rule\":  // adds new rule and resets newRule to \"\"\n      return {\n        ...state,\n        rules: [...state.rules, ...action.payload],\n        newRule: \"\",\n        errors: [],\n      };\n\n      case \"add_errors\": // returns errors\n      return {\n        ...state,\n        rules: state.rules,\n        errors: action.payload };\n\n      case \"delete_rule\": // deletes rule with the ID which has been passed in\n      return {\n        ...state,\n        rules: [...state.rules.filter((rule) => rule.id !== action.payload)],\n      };\n\n      case \"rule_changed\":  // updates the newRule field\n      return {\n        ...state,\n        newRule: action.payload };\n\n      case \"change_loading_status\": // updates loading status\n      return {\n        ...state,\n        isLoading: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst RuleList = () => {\n  const initialState = { rules: [], newRule: \"\", isLoading: false, errors: [] };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  // const exampleRule = \"from:twitterdev has:links\";\n  // const ruleMeaning = `This example rule will match Tweets posted by\n  //    TwtterDev containing links`;\n  const operatorsURL =\n    \"https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/integrate/build-a-rule\";\n  const rulesURL = \"/api/rules\";\n\n  const createRule = async (e) => {\n    e.preventDefault();\n    const payload = { add: [{ value: state.newRule }] };  // defines the new rule to add\n    console.log(`payload = ${payload}`)\n\n    dispatch({ type: \"change_loading_status\", payload: true });  // updates loading state to true\n    try {\n\n      const response = await axios.post(rulesURL, payload); // makes a call to backend\n      if (response.data.body.errors)\n        dispatch({ type: \"add_errors\", payload: response.data.body.errors }); // updates state with any errors from the call\n      else {\n        dispatch({ type: \"add_rule\", payload: response.data.body.data }); // adds the new rule to the state\n      }\n      dispatch({ type: \"change_loading_status\", payload: false }); // updates loading status to false\n    } catch (e) {\n      dispatch({\n        type: \"add_errors\",\n        payload: [{ detail: e.message }], // adds error message to state\n      });\n      dispatch({ type: \"change_loading_status\", payload: false }); // updates loading status to false\n    }\n  };\n\n  const deleteRule = async (id) => {\n    const payload = { delete: { ids: [id] } };\n    console.log(`payload = ${payload}`)\n    dispatch({ type: \"change_loading_status\", payload: true });\n    await axios.post(rulesURL, payload);\n    dispatch({ type: \"delete_rule\", payload: id });\n    dispatch({ type: \"change_loading_status\", payload: false });\n  };\n\n  const errors = () => {\n    const { errors } = state;\n\n    if (errors && errors.length > 0) {\n      return errors.map((error) => (\n        <ErrorMessage key={error.title} error={error} styleType=\"negative\" />\n      ));\n    }\n  };\n\n  const rules = () => {\n    const { isLoading, rules } = state;\n\n    const message = {\n      title: \"No rules present\",\n      details: [\n        `Here are some example rules to help you get started`,\n        `1) Discovering new music videos: Imagine a dashboard that lets you see the music videos being shared across Twitter`,\n        \"song youtube has:links context:55.810938279801470977\",\n        `2) Finding remote developer job openings: Imagine creating a remote developer job listings app with remote developer job openings being shared across Twitter`,\n        \"(developer OR engineer) remote (context:66.961961812492148736 OR context:66.850073441055133696)\",\n        `3) Learning about personal finance and savings: Surface public conversations about personal finance and savings happening on Twitter`,\n        \"context:66.847888632711061504 has:links -is:retweet savings\",\n      ],\n      type: operatorsURL,\n    };\n\n    if (!isLoading) {\n      if (rules && rules.length > 0) {\n        return rules.map((rule) => (\n          <Rule\n            key={rule.id}\n            data={rule}\n            onRuleDelete={(id) => deleteRule(id)}\n          />\n        ));\n      } else {\n        return (\n          <ErrorMessage\n            key={message.title}\n            error={message}\n            styleType=\"warning\"\n          />\n        );\n      }\n    } else {\n      return <Spinner />;\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      dispatch({ type: \"change_loading_status\", payload: true }); // loading status true\n\n      try {\n        const response = await axios.get(rulesURL); // makes a get call to the backend > result is to get the existing set of rules\n        console.log(`axios.get rulesURL response`)\n        console.log(response)\n\n        const { data: payload = [] } = response.data.body; // ??\n        dispatch({  // update state.rules with payload\n          type: \"show_rules\",\n          payload,\n        });\n      } catch (e) {\n        dispatch({ type: \"add_errors\", payload: [e.response.data] }); // shows errors\n      }\n\n      dispatch({ type: \"change_loading_status\", payload: false });\n    })();\n  }, []);\n\n  return (\n    <div>\n      <form onSubmit={(e) => createRule(e)}>\n        <div className=\"ui fluid action input\">\n          <input\n            type=\"text\"\n            autoFocus={true}\n            value={state.newRule}\n            onChange={(e) =>\n              dispatch({ type: \"rule_changed\", payload: e.target.value })\n            }\n          />\n          <button type=\"submit\" className=\"ui primary button\">\n            Add Rule\n          </button>\n        </div>\n        {errors()}\n        {rules()}\n      </form>\n    </div>\n  );\n};\n\nexport default RuleList;\n","import React, {useReducer} from 'react';\nimport axios from \"axios\";\nimport ShowTweets from \"./ShowTweets\";\n\nrequire('dotenv').config()\n\n\nlet Sentiment = require('sentiment');\nlet sentiment = new Sentiment();\nconst searchURL = \"/api/recent/\"\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"add_tweet\":\n            let tempArray = action.payload\n            let tempTweetArray = tempArray.map(tweet=> {\n                let result = sentiment.analyze(tweet.text)\n                let sentimentColor = \"zero\"\n                let score = result.score\n\n                if (score <= -6) {\n                    sentimentColor = \"neg5\"\n                } else if (score <= -4 && score > -6) {\n                    sentimentColor = \"neg4\"\n                } else if (score <= -2 && score > -4) {\n                    sentimentColor = \"neg3\"\n                } else if (score <= -1 && score > -2) {\n                    sentimentColor = \"neg2\"\n                } else if (score > -1 && score < 0) {\n                    sentimentColor = \"neg1\"\n                } else if (score === 0) {\n                    sentimentColor = \"zero\"\n                } else if (score > 0 && score < 1) {\n                    sentimentColor = \"pos1\"\n                } else if (score >= 1 && score < 2) {\n                    sentimentColor = \"pos2\"\n                } else if (score >= 2 && score < 4) {\n                    sentimentColor = \"pos3\"\n                } else if (score >= 4 && score < 6) {\n                    sentimentColor = \"pos4\"\n                } else if (score >= 6) {\n                    sentimentColor = \"pos5\"\n                }\n\n                let tempTweet = {\n                    id: tweet.id,\n                    text: tweet.text,\n                    score: result.score,\n                    comparative: result.comparative,\n                    calculation: result.calculation,\n                    negative: result.negative,\n                    positive: result.positive,\n                    sentimentColor: sentimentColor\n                }\n                return tempTweet\n            })\n\n            tempTweetArray.sort((a,b)=>b.score-a.score)\n            let tempCuScore = tempTweetArray.reduce((t,c)=>(c.score+t),0)\n            let tempCuComScore = tempTweetArray.reduce((t,c)=>(c.comparative+t),0)\n\n            return {\n                ...state,\n                tweets: tempTweetArray,\n                cuScore: tempCuScore,\n                cuComScore: tempCuComScore\n            }\n        case \"add_searchTerm\":\n            return {\n                ...state,\n                searchTerm: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nfunction RecentTweets() {\n\n    const initialState = {\n        tweets: [],\n        cuScore: 0,\n        cuComScore: 0,\n        searchTerm: \"\"\n    }\n\n    const [state, dispatch] = useReducer(reducer, initialState)\n    const { searchTerm } = state;\n\n    const searchTweet = async (e) => {\n        e.preventDefault();\n\n        let convertedSearchTerm = encodeURIComponent(searchTerm)\n\n        try {\n            const response = await axios.get(`${searchURL}${convertedSearchTerm}`);\n            if (response.data.body.errors) {\n                console.log(\"Error in fetching tweets\")\n                console.log(response.data.body.errors)\n            }\n            else {\n                console.log(\"Success in fetching tweets\")\n                dispatch({type: \"add_tweet\", payload: response.data.body.data})\n            }\n\n        } catch (e) {\n            console.log(\"Unable to fetch tweets\")\n        }\n    }\n\n    return (\n        <div>\n            <h1>Recent Tweets Search Component</h1>\n            <form>\n                <div className=\"ui fluid action input\">\n                    <input\n                        type=\"text\"\n                        autoFocus={true}\n                        value={searchTerm}\n                        onChange={(e) =>\n                            dispatch({type:\"add_searchTerm\", payload:e.target.value})\n\n                        }\n                    />\n                    <button className=\"ui primary button\" onClick={(e) => searchTweet(e)}>\n                        Search Recent Tweets\n                    </button>\n                </div>\n            </form>\n            {ShowTweets(state)}\n        </div>\n    );\n}\n\nexport default RecentTweets;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport Navbar from \"./Navbar\";\nimport TweetFeed from \"./TweetFeed\";\nimport RuleList from \"./RuleList\";\nimport RecentTweets from \"./RecentTweets\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"ui container\">\n        <div className=\"introduction\"></div>\n\n        <h1 className=\"ui header\">\n          <img\n            className=\"ui image\"\n            src=\"/Twitter_Logo_Blue.png\"\n            alt=\"Twitter Logo\"\n          />\n          <div className=\"content\">\n            Tweet Sentiment Bot\n            <div className=\"sub header\">Powered by Twitter data</div>\n          </div>\n        </h1>\n\n        <div className=\"ui container\">\n          <BrowserRouter>\n            <Navbar />\n            <Route exact path=\"/\" component={RecentTweets} />\n            <Route exact path=\"/rules\" component={RuleList} />\n            <Route exact path=\"/tweets\" component={TweetFeed} />\n            <Route exact path=\"/recent\" component={RecentTweets} />\n          </BrowserRouter>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./stylesheets/App.css\"\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}